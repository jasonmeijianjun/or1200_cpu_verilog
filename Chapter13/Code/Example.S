       .section .text,"ax"  
       .global _start
       .org 0x0                 #因为指令存放在QMEM中，而且复位后从QMEM的0x0地址始执行，所以这里设置为0x0，
                                #而不再是以前的0x100
##############################           第1步            ##############################
_start:
      l.movhi r0,0x0            #r0-r3寄存器清零
      l.addi r1,r0,0x0
      l.addi r2,r0,0x0
      l.addi r3,r0,0x0

##############################           第2步            ##############################
_DC_Init:                        #初始化DCache中的line0、line1，没有初始化整个DCache，这样节约时间，而且
                                 #后面的程序也只使用这两个line
      l.mtspr r0,r1,0x1803       #初始化的方法与ICache一样，向DCBIR中写入地址0x0、0x10
      l.addi r1,r1,0x10
      l.mtspr r0,r1,0x1803
##############################           第3步            ##############################
      l.addi r1,r0,0x0            #设置r1为0x0
_RAM_Init1:                       #初始化RAM中地址0x0-0xC的内容，0x0处存放0x0，0x4处存放0x4,0x8处存放0x8,
                                  #0xC处存放0xC
      l.sw 0x0(r1),r1
      l.sfeqi r1,0xC
      l.bnf _RAM_Init1
      l.addi r1,r1,0x4
##############################           第4步            ##############################
      l.addi r1,r0,0x10           #设置r1为0x10
_RAM_Init2:                       #初始化RAM中地址0x10-0x1C的内容，0x10、0x14、0x18、0x1C都放置0
      l.sw 0x0(r1),r0
      l.sfeqi r1,0x1C
      l.bnf _RAM_Init2
      l.addi r1,r1,0x4
##############################           第5步            ##############################
      l.addi r1,r0,0x0             #设置r1为0x0
_RAM_Read:                         #加载RAM中0x0、0x4、0x8、0xC处的字
      l.lwz r2,0x0(r1)
      l.sfeqi r1,0xC
      l.bnf _RAM_Read
      l.addi r1,r1,0x4
##############################           第6步            ##############################
      l.addi r1,r0,0x0              #设置r1为0x0

      l.ori r3,r0,0x1                             
      l.mtspr r0,r3,0x0A00           #向地址0x0A00的SPR写入0x1，0x0A00对应的SPR就是DTLBW0MR0，
                                     #所以此处就是设置DTLBW0MR0，对应MR表的第0项放置0x1，
                                     #其中VPN为0，Valid为1                  

      l.ori r3,r0,0x03C0          
      l.mtspr r0,r3,0x0A80           #向地址0x0A80的SPR写入0x00C0，0x0A80对应的SPR就是DTLBW0TR0，
                                     #所以此处就是设置DTLBW0TR0，对应TR表的第0项放置0x00C0，
                                     #其中PPN为0x0，sxe为1，uxe为1，ci为0
                                                 
                                     #上述设置使得有效地址0x0-0x1fff被翻译为物理地址0x0-0x1fff，两者相等
##############################           第7步            ##############################
      l.ori r3,r0,0x8029             
      l.mtspr r0,r3,0x11             #设置SR寄存器为0x8029，也就是SR[DIME]、SR[DCE]都为1，使能DCache、DMMU
      l.nop
##############################           第8步            ##############################
      l.addi r1,r0,0x10                 #设置r1为0x10
_loop1:
      l.sw 0x0(r1),r1                   #存储数据到RAM中，0x10处存储0x10、0x14处存储0x14、
#0x18处存储0x18、0x1C处存储0x1C
      l.sfeqi r1,0x1C
      l.bnf _loop1
      l.addi r1,r1,0x4
##############################           第9步            ##############################
      l.addi r1,r0,0x0                   #设置r1为0x0
_loop2:
      l.lwz r2,0x0(r1)                   #加载RAM中地址0x0、0x4、0x8、0xC处的数据
      l.sfeqi r1,0xC
      l.bnf _loop2
      l.addi r1,r1,0x4
##############################           第10步            ##############################
      l.addi r3,r0,0xF                   
      l.sw 0x0(r0),r3                    #存储0xF到RAM中0x0处

##############################           第11步            ##############################
      l.mtspr r0,r0,0x1804               #将0x0写入DCBWR寄存器

##############################           第12步            ##############################
      l.addi r3,r0,0xFF
      l.sw 0x0(r0),r3                    #存储0xFF到RAM中0x0处

##############################           第13步            ##############################
      l.mtspr r0,r0,0x1802               #将0x0写入DCBFR寄存器

##############################           第14步            ##############################
      l.ori r3,r0,0x03C2          
      l.mtspr r0,r3,0x0A80               #0x0-0x1fff对应内存页缓存禁止

##############################           第15步            ##############################
      l.addi r3,r0,0x55
      l.sw 0x0(r0),r3                     #存储0x55到RAM中0x0处
      l.lwz r2,0x0(r0)                    #从RAM中0x0处加载数据
